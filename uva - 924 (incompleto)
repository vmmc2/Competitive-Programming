#include <bits/stdc++.h>
#include <sstream>
#include <cmath>
#define pb push_back
#define INF 99999999

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

vector<int> adjlist[100000];
int visitados[100000];
int dist[100000];

void reset(){
    for(int i = 0; i < 100000; i++){
        visitados[i] = 0;
        dist[i] = INF;
    }
    return;
}

void bfs(int source){
    dist[source] = 0;
    queue<int> fila;
    visitados[source] = 1;
    fila.push(source);
    while(!fila.empty()){
        int x = fila.front();
        fila.pop();
        for(int i = 0; i < (int)adjlist[x].size(); i++){
            int u = adjlist[x][i];
            if(visitados[u] == 0){
                visitados[u] = 1;
                fila.push(u);
                dist[u] = min(dist[u], dist[x] + 1);
            }
        }
    }
    return;
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    
    int numvertices;
    int n, neigh;
    cin >> numvertices;
    for(int i = 0; i < numvertices; i++){
        cin >> n;
        for(int j = 0; j < n; j++){
            cin >> neigh;
            adjlist[i].push_back(neigh);
        }
    }
    int numqueries, source;
    cin >> numqueries;
    for(int i = 0; i < numqueries; i++){
        cin >> source;
        reset();
        bfs(source);
        /*for(int i = 0; i < numvertices; i++){
            cout << dist[i] << " ";
        }*/
        map<int,int> dicio; //chave = numero do dia --- elemento: qtd de pessoas naquele dia.
        for(int i = 0; i < numvertices; i++){
            dicio[dist[i]]++;
        }
        if(dicio.size() == 2 && dicio.find(0) != dicio.end() && dicio.find(INF) != dicio.end()){
            cout << "0" << "\n";
        }else{
            dicio.erase(0);
            int boom = -2, day = -2;
            for(map<int,int>::iterator it = dicio.begin(); it != dicio.end(); it++){
                if(it->second > boom){
                    boom = it->second;
                    day = it->first;
                }
            }
            cout << boom << " " << day << "\n";
        }
        /*if(i < numqueries - 1){
            cout << "\n";
        }*/
    }
    return 0;
}
